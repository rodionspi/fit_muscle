
#### Структура данных в Firestore
В Firestore данные хранятся в **коллекциях**, которые содержат **документы**. Например, если вы создаете коллекцию `users`, в ней могут храниться документы с данными каждого пользователя. Документы структурированы в виде пар "ключ-значение".

### Шаг 4: Настройка Realtime Database (по желанию)
Если вы хотите использовать Firebase Realtime Database:
1. На главной странице проекта выберите **"Realtime Database"**.
2. Нажмите **"Создать базу данных"**.
3. Выберите режим безопасности и местоположение для базы данных.
4. Нажмите **"Готово"**.

В Realtime Database данные организуются как JSON-дерево.

### Шаг 5: Настройка правил безопасности
Настройте правила безопасности для вашей базы данных, чтобы ограничить доступ:
- Для **Firestore** перейдите в **"Rules"** и настройте правила безопасности для коллекций.
- Для **Realtime Database** перейдите в **"Правила"** и настройте правила доступа для узлов JSON.

Пример правила безопасности для Firestore (разрешает доступ только аутентифицированным пользователям):
```javascript
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
  }
}
```

### Шаг 6: Подключение к приложению
Чтобы подключиться к Firebase из своего приложения, выполните следующие действия:
1. На главной странице вашего проекта перейдите в **Settings** (настройки проекта).
2. Добавьте ваше приложение (например, Android, iOS или веб).
3. Firebase предоставит вам **конфигурационный код**, который нужно добавить в ваше приложение для подключения.

### Пример подключения в JavaScript (Web)
```javascript
// Импортируйте Firebase SDK
import firebase from 'firebase/app';
import 'firebase/firestore';

// Конфигурация вашего проекта
const firebaseConfig = {
  apiKey: "ВАШ_API_KEY",
  authDomain: "ВАШ_PROJECT_ID.firebaseapp.com",
  projectId: "ВАШ_PROJECT_ID",
  storageBucket: "ВАШ_PROJECT_ID.appspot.com",
  messagingSenderId: "ВАШ_MESSAGING_SENDER_ID",
  appId: "ВАШ_APP_ID"
};

// Инициализация Firebase
firebase.initializeApp(firebaseConfig);

// Получите доступ к Firestore
const db = firebase.firestore();

// Пример добавления данных в коллекцию
db.collection("users").add({
    name: "Алиса",
    age: 25,
    city: "Москва"
})
.then((docRef) => {
    console.log("Документ добавлен с ID: ", docRef.id);
})
.catch((error) => {
    console.error("Ошибка добавления документа: ", error);
});
```

### Пример использования Realtime Database
```javascript
import firebase from 'firebase/app';
import 'firebase/database';

// Инициализация Firebase
firebase.initializeApp(firebaseConfig);

// Получите доступ к Realtime Database
const db = firebase.database();

// Запись данных
db.ref('users/1').set({
    name: "Алиса",
    age: 25
})
.then(() => {
    console.log("Данные успешно записаны!");
})
.catch((error) => {
    console.error("Ошибка записи данных: ", error);
});
```

Теперь вы готовы работать с Firebase и добавлять, изменять или удалять данные из вашей базы данных!